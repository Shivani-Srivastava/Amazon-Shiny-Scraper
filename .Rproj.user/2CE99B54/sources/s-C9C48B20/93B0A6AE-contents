
# Function to scrape elements from Amazon reviews
scrape_amazon <- function(url, throttle = 0){
  
  # Install / Load relevant packages
  if(!"pacman" %in% installed.packages()[,"Package"]) install.packages("pacman")
  pacman::p_load(RCurl, XML, dplyr, stringr, rvest, purrr)
  
  # Set throttle between URL calls
  sec = 0
  if(throttle < 0) warning("throttle was less than 0: set to 0")
  if(throttle > 0) sec = max(0, throttle + runif(1, -1, 1))
  
  # obtain HTML of URL
  doc <- read_html(url)
  
  # Parse relevant elements from HTML
  title <- doc %>%
    html_nodes("#cm_cr-review_list .a-color-base") %>%
    html_text()%>% 
    trimws()
  
  author <- doc %>%
    html_nodes("#cm_cr-review_list .a-profile-name") %>%
    html_text()%>% 
    trimws()
  
  date <- doc %>%
    html_nodes("#cm_cr-review_list .review-date") %>%
    html_text() %>% 
    gsub(".*on ", "", .)%>% 
    trimws()
  
  review_format <- doc %>% 
    html_nodes(".review-format-strip") %>% 
    html_text()%>% 
    trimws()
  
  stars <- doc %>%
    html_nodes("#cm_cr-review_list  .review-rating") %>%
    html_text() %>%
    str_extract("\\d") %>%
    as.numeric() 
  
  comments <- doc %>%
    html_nodes("#cm_cr-review_list .review-text") %>%
    html_text()%>% 
    trimws()
  
  suppressWarnings(n_helpful <- doc %>%
                     html_nodes(".a-expander-inline-container") %>%
                     html_text() %>%
                     gsub("\n\n \\s*|found this helpful.*", "", .) %>%
                     gsub("One", "1", .) %>%
                     map_chr(~ str_split(string = .x, pattern = " ")[[1]][1]) %>%
                     as.numeric())
  
  # Combine attributes into a single data frame
  df <- data.frame(title, author, date, review_format, stars, comments, stringsAsFactors = F)
  
  return(df)
}


# load DT packege
pacman::p_load(DT)

# run scraper function
url <- "http://www.amazon.com/product-reviews/B07HSKPDBV/?pageNumber=1"
reviews <- scrape_amazon(url)

# display data
str(reviews)

# Set # of pages to scrape. Note: each page contains 8 reviews.
pages <- 100

# create empty object to write data into
reviews_all <- data.frame()

# loop over pages
for(page_num in 1:pages){
  url <- paste0("http://www.amazon.com/product-reviews/",prod_code,"/?pageNumber=", page_num)
  reviews <- scrape_amazon(url, throttle = 3)
  reviews_all <- rbind(reviews_all, cbind(prod, reviews))
}




get_reviews <- function(prod_code,pages,base_url){
  
  url <- paste0(base_url,"/", prod_code)
  doc <- read_html(url)
  #obtain the text in the node, remove "\n" from the text, and remove white space
  prod <- html_nodes(doc, "#productTitle") %>% 
    html_text() %>% 
    gsub("\n", "", .) %>% 
    trimws()
  
  # Set # of pages to scrape. Note: each page contains 8 reviews.
  #pages <- 100
  
  # create empty object to write data into
  reviews_all <- data.frame()
  
  # loop over pages
  for(page_num in 1:pages){
    #url <- paste0(base_url,"/product-reviews/",prod_code,"/?pageNumber=", page_num)
    url <- paste0(base_url,"&pageNumber=",page_num)
    reviews <- scrape_amazon(url, throttle = 3)
   # reviews_all <- rbind(reviews_all, cbind(prod, reviews))
    reviews_all <- rbind(reviews_all, reviews)
  }
  
  return(list(reviews_all,prod))
  
}


r1 <- get_reviews(base_url = "www.amazon.in",
                  prod_code = "B08444SXZ6",
                  pages = 3)


url <- "https://www.amazon.in/BenQ-EL2870U-Response-Brightness-Intelligence/product-reviews/B079HV1TDC/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews&pageNumber=1"


url <- "https://www.amazon.com/PULSE-3D-Wireless-Headset-PlayStation-5/product-reviews/B08FC6QLKN/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews&pageNumber=1"
url <- "https://www.amazon.in/DisplayPort-CableCreation-Thunderbolt-Adapter%EF%BC%884K-Compatible/product-reviews/B08BXPVPPQ/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews&"
url <- "https://www.amazon.com/PULSE-3D-Wireless-Headset-PlayStation-5/dp/B08FC6QLKN/ref=cm_cr_arp_d_product_top?ie=UTF8"
